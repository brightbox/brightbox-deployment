#!/usr/bin/env ruby
#    Brightbox - Easy Ruby Web Application Deployment
#    Copyright (C) 2008, Neil Wilson, Brightbox Systems
#
#    This file is part of the Brightbox deployment system
#
#    Brightbox gem is free software: you can redistribute it and/or modify it
#    under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License,
#    or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General
#    Public License along with this program.  If not, see
#    <http://www.gnu.org/licenses/>.
#

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'optparse'
require 'brightbox/version'

@options = {}
@progname = File.basename($0)

def has_required_options?
  [@server].all?
end

OptionParser.new do |opts|
  opts.banner = "Set up your Rails application for deployment\n"
  opts.banner << "Usage: #{@progname} [options] <directory_name>\n\n"

  opts.on("-n APPLICATION_NAME", "--name APPLICATION_NAME",
    "Name of application (a short useful",
    "name for the app such as 'myforum')",
    "(defaults to the short name of the server)\n"
  ) { |value| @application = value }
  
  opts.on("-d DOMAIN_NAME", "--domain DOMAIN_NAME",
    "Domain name for application",
    "(e.g: www.example.com)",
    "(defaults to the server name)\n"
  ) { |value| @domain = value }
  
  opts.on("-i SERVER_NAME", "--server SERVER_NAME",
    "Hostname or IP address of your",
    "Brightbox virtual server",
    "(e.g: example-001.vm.brightbox.net)\n"
  ) { |value| @server = value }

  opts.on_tail("-h", "--help", "Displays this help page") do
    puts opts
    exit 0
  end
  
  opts.on_tail("-v", "--version", "Displays the version number") do
    puts "#{@progname}: version #{Brightbox::VERSION}"
    exit 0
  end
 
  begin
    opts.parse!(ARGV)
    raise OptionParser::ParseError,
      "You must supply the server name" unless has_required_options?
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end


abort "Please specify the directory containing the Rails app, e.g. '#{@progname} .'" if ARGV.empty?
abort "Too many arguments; please provide a single directory name." unless ARGV.length == 1
abort "'#{ARGV.first}' does not exist." unless File.exists?(ARGV.first)
abort "'#{ARGV.first}' is not a directory." unless File.directory?(ARGV.first)

def unindent(string)
  indentation = string[/\A\s*/]
  string.strip.gsub(/^#{indentation}/, "")
end

@domain ||= @server
@application ||= @server.gsub(/(-\d{3})?\..*\Z/,'')

files = {
  "Capfile" => unindent(<<-FILE),
    # Generated with '#{@progname}' on #{Time.now}
    load 'deploy' if respond_to?(:namespace) # cap2 differentiator
    Dir['vendor/plugins/*/recipes/*.rb'].each { |plugin| load(plugin) }
    load 'config/deploy'
  FILE

  "lib/tasks/bbgem.rake" => unindent(<<-FILE),
    # Generated with '#{@progname}' on #{Time.now}
    unless Rake::Task.task_defined?("gems:install") 
      namespace(:gems) do
        desc "Installs all required gems for this application."
        task :install do
          puts "This is a dummy task installed by the Brightbox command"
          puts "If you need gems to make your application work"
          puts "Uncomment the install command and add your gems to the list"
          puts "... or upgrade to Rails 2.1 and use the inbuilt facilities"
    #      system("sudo gem install --no-ri --no-rdoc -y will_paginate")
        end
      end
    end
  FILE

"config/deploy.rb" => unindent(<<-FILE),
    ## Generated with '#{@progname}' on #{Time.now}
    gem 'brightbox', '>=#{Brightbox::VERSION}'
    require 'brightbox/recipes'

    # The name of your application.  Used for deployment directory and filenames
    # and Apache configs. Should be unique on the Brightbox
    set :application, "#{@application}"

    # Primary domain name of your application. Used in the Apache configs
    set :domain, "#{@domain}"

    ## List of servers
    server "#{@server}", :app, :web, :db, :primary => true

    # Target directory for the application on the web and app servers.
    set(:deploy_to) { File.join("/home", user, application) }

    # URL of your source repository. This is the default one that comes on 
    # every Brightbox, you can use your own (we'll let you :)
    set :repository, "."
    set :scm, :none
    set :deploy_via, :copy

    ### Other options you can set ##
    # SSL Certificates. If you specify an SSL certificate name then
    # the gem will create an 'https' configuration for this application
    # TODO: Upload and install the keys on the server
    # set :ssl_certificate, "/path/to/certificate/for/my_app.crt"
    # set :ssl_key, "/path/to/key/for/my_app.key
    # or
    # set :ssl_certificate, "name_of_installed_certificate"

    # Comma separated list of additional domains for Apache
    # set :domain_aliases, "www.example.com,dev.example.com"

    # SSH options. The forward agent option is used so that loopback logins
    # with keys work properly
    # ssh_options[:forward_agent] = true
    
    # Forces a Pty so that svn+ssh repository access will work. You
    # don't need this if you are using a different SCM system. Note that
    # ptys stop shell startup scripts from running.
    default_run_options[:pty] = true

    ## Logrotation
    # Where the logs are stored. Defaults to <shared_path>/log
    # set :log_dir, "central/log/path"
    # The size at which to rotate a log. e.g 1G, 100M, 5M. Defaults to 100M
    # set :log_max_size, "100M"
    # How many old compressed logs to keep. Defaults to 10
    # set :log_keep, "10"

    ## Version Control System
    # Which version control system. Defaults to subversion if there is
    # no 'set :scm' command.
    # set :scm, :git
    # set :scm_username, "rails"
    # set :scm_password, "mysecret"
    # or be explicit
    # set :scm, :subversion

    ## Mongrel settings
    # Host where mongrel lives. Defaults to the app server
    # set :mongrel_host, "127.0.0.1"
    # Port number where mongrel starts. Defaults to 9200
    # set :mongrel_port, 9200
    # Number of mongrel servers to start. Defaults to 2
    # set :mongrel_servers, 2
    
    ## Deployment settings
    # The brightbox gem deploys as the user 'rails' by default and
    # into the 'production' environment. You can change these as required.
    # set :user, "rails"
    # set :rails_env, :production

    ## Command running settings
    # use_sudo is switched off by default so that commands are run
    # directly as 'user' by the run command. If you switch on sudo
    # make sure you set the :runner variable - which is the user the
    # capistrano default tasks use to execute commands.
    # NB. This just affects the default recipes unless you use the
    # 'try_sudo' command to run your commands.
    # set :use_sudo, false
    # set :runner, user
    
    ## Dependencies
    # Set the commands and gems that your application requires. e.g.
    # depend :remote, :gem, "will_paginate", ">=2.2.2"
    # depend :remote, :command, "brightbox"
  FILE
}

base = ARGV.shift
files.each do |file, content|
  file = File.join(base, file)
  if File.exists?(file)
    warn "[skip] `#{file}' already exists"
  elsif File.exists?(file.downcase)
    warn "[skip] `#{file.downcase}' exists, which could conflict with `#{file}'"
  elsif !File.exists?(File.dirname(file))
    warn "[skip] directory `#{File.dirname(file)}' does not exist"
  else
    puts "[add] writing `#{file}'"
    File.open(file, "w") { |f| f.write(content) }
  end
end

puts "[done] ready for deployment!"

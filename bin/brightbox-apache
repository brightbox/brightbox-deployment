#!/usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'erb'
require 'fileutils'

@mongrelhost = "127.0.0.1"
@port = 9200
@mongrels = 2

OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options] [args]"

  opts.on("-n", "--name APPLICATION_NAME",
    "Name of application."
  ) { |value| @application = value }
  opts.on("-w", "--webroot WEB_ROOT",
    "path to web root"
  ) { |value| @webroot = value }
  opts.on("-d", "--domain DOMAIN_NAME",
    "Domain name for application."
  ) { |value| @domain = value }
  opts.on("-p", "--port MONGREL_PORT",
    "Port of the first mongrel sevuce"
  ) { |value| @port = value.to_i }
  opts.on("-s", "--servers MONGRELS",
    "Number of mongrel servers running"
  ) { |value| @mongrels = value.to_i }
  opts.on("-h", "--mongrelhost MONGREL_HOST",
    "ip/host where mongrel is running"
  ) { |value| @mongrelhost = value }
 
  if ARGV.empty?
    puts opts
      exit
  else
    opts.parse!(ARGV)
  end
end

@balancer_members = (@port..@port+@mongrels-1).collect {|i| "    BalancerMember http://#{@mongrelhost}:#{i}" }.join("\n")

TEMPLATE = <<EOT
# Created by the Brightbox Capistrano GEM at <%= Time.now %>
<VirtualHost *:80>
  ServerName <%= @domain %>
  DocumentRoot <%= @webroot %>

  <Directory "<%= @webroot %>">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

  # Configure mongrel_cluster
  <Proxy balancer://mongrel_cluster>
<%= @balancer_members %>
  </Proxy>

  ErrorLog /var/log/web/<%= @application %>.err
  CustomLog /var/log/web/<%= @application %>.log combined

  # Rails specific rewrite rules
  Include /etc/apache2/brightbox-common

  # Add any access limit directives here
  <Location />
    Allow from all
  </Location>
</VirtualHost>
EOT

template = ERB.new(TEMPLATE)
config = template.result
filename = "/etc/apache2/sites-available/rails-#{@application}"
if File.exists?(filename)
  FileUtils.mkdir_p("/etc/apache2/sites-archived")
  FileUtils.cp filename, "/etc/apache2/sites-archived/rails-#{@application}.#{Time.now.strftime('%y%m%d%H%M%S')}"
end

File.open(filename, "w") { |f| f.write config }
FileUtils.ln_s(filename, "/etc/apache2/sites-enabled/rails-#{@application}", :force => true)

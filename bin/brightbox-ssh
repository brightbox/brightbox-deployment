#!/usr/bin/env ruby
#    Brightbox - Easy Ruby Web Application Deployment
#    Copyright (C) 2008, Neil Wilson, Brightbox Systems
#
#    This file is part of the Brightbox deployment system
#
#    Brightbox gem is free software: you can redistribute it and/or modify it
#    under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License,
#    or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General
#    Public License along with this program.  If not, see
#    <http://www.gnu.org/licenses/>.
#

require 'optparse'

OptionParser.new do |opts|
  opts.banner = "Set up ssh loopback known host\n"
  opts.banner << "Usage: #{File.basename($0)}\n\n"

  opts.on_tail("-h", "--help", "Displays this help page") do
    puts opts
    exit 0
  end
 
  begin
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end

@progname = File.basename($0)
@known_hosts = File.join(ENV['HOME'],'.ssh','known_hosts')

def get_host_key
  @host_key = File.open('/etc/ssh/ssh_host_rsa_key.pub') {|f| f.read }
  @host_key.strip!
rescue 
  abort "#{@progname}: Can't obtain the public key - aborting"
  exit 1
end

def get_hostname
  @hostname = File.open('/etc/hostname') {|f| f.read }
  @hostname.strip!
rescue 
  abort "#{@progname}: Can't obtain the hostname - aborting"
  exit 1
end

abort "#{@progname}: No arguments required" unless ARGV.empty?

if File.exists? @known_hosts
  puts "#{@progname}: #{File.basename @known_hosts} already exists, skipping"
else
  get_host_key
  get_hostname
  File.open(@known_hosts, 'w') do |file|
    file.print @hostname,' ',@host_key
  end
  puts "#{@progname}: #{File.basename @known_hosts} created."
end


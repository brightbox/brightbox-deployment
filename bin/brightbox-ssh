#!/usr/bin/env ruby

require 'optparse'

OptionParser.new do |opts|
  opts.banner = "Set up ssh loopback known host\n"
  opts.banner << "Usage: #{File.basename($0)}\n\n"

  opts.on_tail("-h", "--help", "Displays this help page") do
    puts opts
    exit 0
  end
 
  begin
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end

@progname = File.basename($0)
@known_hosts = File.join(ENV['HOME'],'.ssh','known_hosts')

def get_host_key
  @host_key = File.open('/etc/ssh/ssh_host_rsa_key.pub') {|f| f.read }
  @host_key.strip!
rescue 
  abort "#{@progname}: Can't obtain the public key - aborting"
  exit 1
end

def get_hostname
  @hostname = File.open('/etc/hostname') {|f| f.read }
  @hostname.strip!
rescue 
  abort "#{@progname}: Can't obtain the hostname - aborting"
  exit 1
end

abort "#{@progname}: No arguments required" unless ARGV.empty?

if File.exists? @known_hosts
  puts "#{@progname}: #{File.basename @known_hosts} already exists, skipping"
else
  get_host_key
  get_hostname
  File.open(@known_hosts, 'w') do |file|
    file.print @hostname,' ',@host_key
  end
  puts "#{@progname}: #{File.basename @known_hosts} created."
end

